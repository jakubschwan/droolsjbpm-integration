<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.kie.server</groupId>
        <artifactId>kie-server-tests</artifactId>
        <version>7.0.0-SNAPSHOT</version>
    </parent>

    <artifactId>kie-server-integ-tests-cluster</artifactId>

    <name>KIE :: Execution Server :: Tests :: Cluster Integration Tests</name>
    <description>KIE Execution Server Integration Tests (REST, JMS). Can be configured to run on different supported containers.</description>
    
    <properties>
        
        <containers.dir>${project.build.directory}/cluster-servers</containers.dir>
        <configurations.dir>${project.build.directory}/cluster-configurations</configurations.dir>
        <container.profile.dir>${configurations.dir}/profiles</container.profile.dir>
        
        <!-- Datasource properties, servers in cluster need same db -->
        <org.jbpm.persistence.dialect>org.hibernate.dialect.H2Dialect</org.jbpm.persistence.dialect>
        <org.jbpm.datasource.connection.url>jdbc:h2:file:../database/test2-db;AUTO_SERVER=TRUE</org.jbpm.datasource.connection.url>
        <org.jbpm.datasource.username>sa</org.jbpm.datasource.username>
        <org.jbpm.datasource.password>sa</org.jbpm.datasource.password>
        <org.jbpm.datasource.driver.class>org.h2.jdbcx.JdbcDataSource</org.jbpm.datasource.driver.class>
        <org.jbpm.datasource.driver.jdbc.class>org.h2.jdbcx.JdbcDataSource</org.jbpm.datasource.driver.jdbc.class>
        <org.jbpm.datasource.hostname/>
        <org.jbpm.datasource.port/>
        <org.jbpm.datasource.dbName/>
        <org.jbpm.persistence.schema/>
        <org.jbpm.persistence.ds/>
        
        <container.port>38080</container.port>
        <cluster.one.port>38230</cluster.one.port> <!-- ofset 150 -->
        <cluster.two.port>38380</cluster.two.port> <!-- ofset 300 -->
        <kie.server.cluster.one.http.url>http://${container.hostname}:${cluster.one.port}/${kie.server.context}/services/rest/server</kie.server.cluster.one.http.url>
        <kie.server.cluster.two.http.url>http://${container.hostname}:${cluster.two.port}/${kie.server.context}/services/rest/server</kie.server.cluster.two.http.url>
    </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.kie.server</groupId>
        <artifactId>kie-server-controller-test-war</artifactId>
        <classifier>ee7</classifier>
        <type>war</type>
        <scope>test</scope>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.kie.server</groupId>
        <artifactId>kie-server-controller-test-war</artifactId>
        <classifier>ee6</classifier>
        <type>war</type>
        <scope>test</scope>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.kie.server</groupId>
        <artifactId>kie-server-controller-test-war</artifactId>
        <classifier>webc</classifier>
        <type>war</type>
        <scope>test</scope>
        <version>${project.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.kie.server</groupId>
      <artifactId>kie-server-integ-tests-common</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- kie server deps -->
    <dependency>
      <groupId>org.kie.server</groupId>
      <artifactId>kie-server-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.kie.server</groupId>
      <artifactId>kie-server-controller-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.kie.server</groupId>
      <artifactId>kie-server-services-common</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.kie.server</groupId>
      <artifactId>kie-server-services-drools</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.kie.server</groupId>
      <artifactId>kie-server-services-jbpm</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.kie.server</groupId>
      <artifactId>kie-server-services-jbpm-ui</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.kie.server</groupId>
      <artifactId>kie-server-client</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.kie.server</groupId>
      <artifactId>kie-server-rest-common</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.kie.server</groupId>
      <artifactId>kie-server-rest-drools</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.kie.server</groupId>
      <artifactId>kie-server-rest-jbpm</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.kie.server</groupId>
      <artifactId>kie-server-rest-jbpm-ui</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>xerces</groupId>
      <artifactId>xercesImpl</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- REST -->
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jaxrs</artifactId>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.jboss.spec.javax.servlet</groupId>
      <artifactId>jboss-servlet-api_3.1_spec</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>tjws</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    
    <!-- persistence --> 
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-entitymanager</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.codehaus.btm</groupId>
      <artifactId>btm</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- Logging -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <!-- Replacement for the above excluded 'commons-logging:commons-logging' -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
    </dependency>

    <dependency>
      <groupId>org.kie.server</groupId>
      <artifactId>kie-server</artifactId>
      <classifier>webc</classifier>
      <type>war</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.kie.server</groupId>
      <artifactId>kie-server</artifactId>
      <classifier>ee6</classifier>
      <type>war</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.kie.server</groupId>
      <artifactId>kie-server</artifactId>
      <classifier>ee7</classifier>
      <type>war</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.kie.server</groupId>
      <artifactId>kie-server-controller-test-war</artifactId>
      <classifier>webc</classifier>
      <type>war</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.kie.server</groupId>
      <artifactId>kie-server-controller-test-war</artifactId>
      <classifier>ee7</classifier>
      <type>war</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.kie.server</groupId>
      <artifactId>kie-server-controller-test-war</artifactId>
      <classifier>ee6</classifier>
      <type>war</type>
      <scope>test</scope>
    </dependency>

    <!-- This is an artificial dependency to make sure the kie-server-tests modules are executed one at a time during
         parallel build (otherwise the tests fail because of conflicting port binding) -->
    <dependency>
      <groupId>org.kie.server</groupId>
      <artifactId>kie-server-integ-tests-all</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
 
    
    <!-- core deps -->
    <dependency>
      <groupId>org.drools</groupId>
      <artifactId>drools-compiler</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.kie</groupId>
      <artifactId>kie-ci</artifactId>
      <scope>test</scope>
    </dependency>
    
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>fluent-hc</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-embedder</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jbpm</groupId>
      <artifactId>jbpm-kie-services</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.dashbuilder</groupId>
      <artifactId>dashbuilder-dataset-api</artifactId>
      <scope>test</scope>
    </dependency>


    <!-- This is an artificial dependency to make sure the kie-server-tests modules are executed one at a time during
         parallel build (otherwise the tests fail because of conflicting port binding) -->
    <dependency>
      <groupId>org.kie.server</groupId>
      <artifactId>kie-server-integ-tests-drools</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <configuration>
            <systemPropertyVariables>
              <!-- test properties -->
              <cluster.configuration.dir>${container.profile.dir}</cluster.configuration.dir>
              <cluster.container.dir>${containers.dir}</cluster.container.dir>
              <!-- Values are supplied by specific profiles -->
              <cargo.container.id>${cargo.container.id}</cargo.container.id>
              <cargo.servlet.port>${container.port}</cargo.servlet.port>
              <kie.server.context>${kie.server.context}</kie.server.context>
              <kie.server.war.path>${kie.server.war.path}</kie.server.war.path>
              <weblogic.home>${weblogic.home}</weblogic.home>
              <kie.server.remoting.url>${kie.server.remoting.url}</kie.server.remoting.url>
              <kie.server.base.http.url>${kie.server.base.http.url}</kie.server.base.http.url>
              <kie.server.cluster.one.http.url>${kie.server.cluster.one.http.url}</kie.server.cluster.one.http.url>
              <kie.server.cluster.two.http.url>${kie.server.cluster.two.http.url}</kie.server.cluster.two.http.url>
              <kie.server.context.factory>${kie.server.context.factory}</kie.server.context.factory>
              <kie.server.connection.factory>${kie.server.connection.factory}</kie.server.connection.factory>
              <kie.server.jndi.request.queue>${kie.server.jndi.request.queue}</kie.server.jndi.request.queue>
              <kie.server.jndi.response.queue>${kie.server.jndi.response.queue}</kie.server.jndi.response.queue>
              <kie.server.controller.base.http.url>${kie.server.controller.base.http.url}</kie.server.controller.base.http.url>
              <org.kie.server.persistence.ds>${org.kie.server.persistence.ds}</org.kie.server.persistence.ds>
              <org.jbpm.document.storage>${org.jbpm.document.storage}</org.jbpm.document.storage>
            </systemPropertyVariables>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.cargo</groupId>
          <artifactId>cargo-maven2-plugin</artifactId>
          <configuration>
            <container>
              <systemProperties>
                <org.jbpm.server.ext.disabled>false</org.jbpm.server.ext.disabled>
                <org.drools.server.ext.disabled>false</org.drools.server.ext.disabled>
                <org.jbpm.ui.server.ext.disabled>false</org.jbpm.ui.server.ext.disabled>
                <org.optaplanner.server.ext.disabled>false</org.optaplanner.server.ext.disabled>
                <org.jbpm.case.server.ext.disabled>true</org.jbpm.case.server.ext.disabled>
                <org.kie.server.location>${kie.server.base.http.url}</org.kie.server.location>
                <org.kie.server.id>cluster-kie-server</org.kie.server.id>
                <org.kie.server.controller>${kie.server.controller.base.http.url}</org.kie.server.controller>
                <org.kie.server.controller.user>yoda</org.kie.server.controller.user>
                <org.kie.server.controller.pwd>usetheforce123@</org.kie.server.controller.pwd>
                <org.kie.server.user>yoda</org.kie.server.user>
                <org.kie.server.pwd>usetheforce123@</org.kie.server.pwd>
                <org.kie.server.sync.deploy>true</org.kie.server.sync.deploy>
                <!--<org.kie.server.persistence.ds>${org.jbpm.persistence.ds}</org.kie.server.persistence.ds>
                <org.kie.server.persistence.dialect>${org.jbpm.persistence.dialect}</org.kie.server.persistence.dialect>
                <org.kie.server.persistence.tm>${container.tm}</org.kie.server.persistence.tm>-->
              </systemProperties>
              <dependencies>
              <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
              </dependency>
            </dependencies>
            </container>
            <deployables combine.children="append">
              <deployable>
                <groupId>${project.groupId}</groupId>
                <artifactId>kie-server-controller-test-war</artifactId>
                <!-- default, may be overriden in container specific profiles -->
                <classifier>${kie.server.classifier}</classifier>
                <type>war</type>
                <properties>
                  <context>${kie.server.controller.context}</context>
                </properties>
                <pingURL>${kie.server.controller.base.http.url}</pingURL>
                <pingTimeout>60000</pingTimeout>
              </deployable>
            </deployables>
            <dependencies>
              <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
              </dependency>
            </dependencies>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>false</filtering>
      </testResource>
      <testResource>
        <directory>src/test/filtered-resources</directory>
        <filtering>true</filtering>
      </testResource>
    </testResources>
    <plugins>
      <plugin>
        <groupId>org.codehaus.cargo</groupId>
        <artifactId>cargo-maven2-plugin</artifactId>
      </plugin>
    </plugins>
  </build>
  
  <profiles>
    <profile>
      <id>eap7</id>
      <properties>
        <org.jbpm.cluster.persistence.ds>jboss/datasources/jbpm</org.jbpm.cluster.persistence.ds>
      </properties>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.codehaus.cargo</groupId>
              <artifactId>cargo-maven2-plugin</artifactId>
              <configuration>
                <container>
                  <type>installed</type>
                  <zipUrlInstaller>
                    <url>${eap7.download.url}</url>
                    <extractDir>${containers.dir}/default</extractDir>
                  </zipUrlInstaller>
                </container>
                <configuration>
                  <home>${container.profile.dir}/default</home>
                </configuration>
              </configuration>
              <executions combine.self="override">
                <execution>
                  <id>start-first-container</id>
                  <phase>pre-integration-test</phase>
                  <configuration>
                      <container>
                          <type>installed</type>
                          <zipUrlInstaller>
                              <url>${eap7.download.url}</url>
                              <extractDir>${containers.dir}/cluster1</extractDir>
                          </zipUrlInstaller>
                          <systemProperties>
                            <org.kie.server.id>templateOne</org.kie.server.id>
                            <org.kie.server.location>${kie.server.cluster.one.http.url}</org.kie.server.location>
                            <org.kie.executor.jms>false</org.kie.executor.jms>
                            <org.kie.server.persistence.ds>${org.jbpm.cluster.persistence.ds}</org.kie.server.persistence.ds>
                            <org.kie.server.persistence.dialect>${org.jbpm.persistence.dialect}</org.kie.server.persistence.dialect>
                          </systemProperties>
                      </container>
                      <deployables combine.self="override">
                        <deployable>
                          <groupId>${project.groupId}</groupId>
                          <artifactId>kie-server</artifactId>
                          <!-- default, may be overridden in container specific profiles -->
                          <classifier>${kie.server.classifier}</classifier>
                          <type>war</type>
                          <properties>
                            <context>${kie.server.context}</context>
                          </properties>
                          <pingUrlPath>/${kie.server.context}/services/rest/server</pingUrlPath>
                          <pingTimeout>60000</pingTimeout>
                        </deployable>
                      </deployables>
                      <configuration>
                          <home>${container.profile.dir}/cluster1</home>
                          <properties>
                              <cargo.jboss.configuration>standalone-full</cargo.jboss.configuration>
                              <cargo.jvmargs>-Xmx1024m</cargo.jvmargs>
                              <cargo.port.offset>150</cargo.port.offset>
                              <cargo.datasource.datasource.jbpm>
                                cargo.datasource.driver=${org.jbpm.datasource.driver.class}|
                                cargo.datasource.url=${org.jbpm.datasource.connection.url}|
                                cargo.datasource.jndi=${org.jbpm.cluster.persistence.ds}|
                                cargo.datasource.username=${org.jbpm.datasource.username}|
                                cargo.datasource.password=${org.jbpm.datasource.password}|
                                cargo.datasource.transactionsupport=XA_TRANSACTION
                            </cargo.datasource.datasource.jbpm>
                          </properties>
                      </configuration>         
                  </configuration>
                  <goals>
                    <goal>start</goal>
                  </goals>
                </execution>
                <execution>
                  <id>start-second-container</id>
                  <phase>pre-integration-test</phase>
                  <configuration>
                      <container>
                          <type>installed</type>
                          <zipUrlInstaller>
                              <url>${eap7.download.url}</url>
                              <extractDir>${containers.dir}/cluster2</extractDir>
                          </zipUrlInstaller>
                          <systemProperties>
                              <org.kie.server.id>templateOne</org.kie.server.id>
                              <org.kie.server.location>${kie.server.cluster.two.http.url}</org.kie.server.location>
                              <org.kie.executor.jms>false</org.kie.executor.jms>
                              <org.kie.server.persistence.ds>${org.jbpm.cluster.persistence.ds}</org.kie.server.persistence.ds>
                              <org.kie.server.persistence.dialect>${org.jbpm.persistence.dialect}</org.kie.server.persistence.dialect>
                          </systemProperties>
                      </container>
                      <deployables combine.self="override">
                        <deployable>
                          <groupId>${project.groupId}</groupId>
                          <artifactId>kie-server</artifactId>
                          <!-- default, may be overridden in container specific profiles -->
                          <classifier>${kie.server.classifier}</classifier>
                          <type>war</type>
                          <properties>
                            <context>${kie.server.context}</context>
                          </properties>
                          <pingUrlPath>/${kie.server.context}/services/rest/server</pingUrlPath>
                          <pingTimeout>60000</pingTimeout>
                        </deployable>
                      </deployables>
                      <configuration>
                          <home>${container.profile.dir}/cluster2</home>
                          <properties>
                              <cargo.jboss.configuration>standalone-full</cargo.jboss.configuration>
                              <cargo.jvmargs>-Xmx1024m</cargo.jvmargs>
                              <cargo.port.offset>300</cargo.port.offset>
                              <cargo.datasource.datasource.jbpm>
                                cargo.datasource.driver=${org.jbpm.datasource.driver.class}|
                                cargo.datasource.url=${org.jbpm.datasource.connection.url}|
                                cargo.datasource.jndi=${org.jbpm.cluster.persistence.ds}|
                                cargo.datasource.username=${org.jbpm.datasource.username}|
                                cargo.datasource.password=${org.jbpm.datasource.password}|
                                cargo.datasource.transactionsupport=XA_TRANSACTION
                              </cargo.datasource.datasource.jbpm>
                          </properties>
                      </configuration>
                  </configuration>
                  <goals>
                    <goal>start</goal>
                  </goals>
                </execution>
                <execution>
                  <id>stop-first-container</id>
                  <phase>post-integration-test</phase>
                  <configuration>
                    <configuration>
                          <properties>
                              <cargo.port.offset>150</cargo.port.offset>
                          </properties>
                      </configuration>
                  </configuration>
                  <goals>
                    <goal>stop</goal>
                  </goals>
                </execution>
                <execution>
                  <id>stop-second-container</id>
                  <phase>post-integration-test</phase>
                  <configuration>
                    <configuration>
                          <properties>
                              <cargo.port.offset>300</cargo.port.offset>
                          </properties>
                      </configuration>
                  </configuration>
                  <goals>
                    <goal>stop</goal>
                  </goals>
                </execution>
              </executions>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    
    <profile>
      <id>wildfly10</id>
      <properties>
          <org.jbpm.cluster.persistence.ds>jboss/datasources/jbpm</org.jbpm.cluster.persistence.ds>
      </properties>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.codehaus.cargo</groupId>
              <artifactId>cargo-maven2-plugin</artifactId>
              <configuration>
                <container>
                  <type>installed</type>
                  <artifactInstaller>
                    <groupId>org.wildfly</groupId>
                    <artifactId>wildfly-dist</artifactId>
                    <version>${version.wildfly10}</version>
                    <extractDir>${containers.dir}/default</extractDir>
                  </artifactInstaller>
                </container>
                <configuration>
                  <home>${container.profile.dir}/default</home>
                </configuration>
              </configuration>
              <executions combine.children="append">
                <execution>
                  <id>start-first-container</id>
                  <phase>pre-integration-test</phase>
                  <configuration>
                      <container>
                          <type>installed</type>
                          <artifactInstaller>
                            <groupId>org.wildfly</groupId>
                            <artifactId>wildfly-dist</artifactId>
                            <version>${version.wildfly10}</version>
                            <extractDir>${containers.dir}/default</extractDir>
                          </artifactInstaller>
                          <systemProperties>
                            <org.kie.server.id>templateOne</org.kie.server.id>
                            <org.kie.server.location>${kie.server.cluster.one.http.url}</org.kie.server.location>
                            <org.kie.executor.jms>false</org.kie.executor.jms>
                            <org.kie.server.persistence.ds>${org.jbpm.cluster.persistence.ds}</org.kie.server.persistence.ds>
                            <org.kie.server.persistence.dialect>${org.jbpm.persistence.dialect}</org.kie.server.persistence.dialect>
                          </systemProperties>
                      </container>
                      <deployables combine.self="override">
                        <deployable>
                          <groupId>${project.groupId}</groupId>
                          <artifactId>kie-server</artifactId>
                          <!-- default, may be overridden in container specific profiles -->
                          <classifier>${kie.server.classifier}</classifier>
                          <type>war</type>
                          <properties>
                            <context>${kie.server.context}</context>
                          </properties>
                          <pingUrlPath>/${kie.server.context}/services/rest/server</pingUrlPath>
                          <pingTimeout>60000</pingTimeout>
                        </deployable>
                      </deployables>
                      <configuration>
                          <home>${container.profile.dir}/cluster1</home>
                          <properties>
                              <cargo.jboss.configuration>standalone-full</cargo.jboss.configuration>
                              <cargo.jvmargs>-Xmx1024m</cargo.jvmargs>
                              <cargo.port.offset>150</cargo.port.offset>
                              <cargo.datasource.datasource.jbpm>
                                cargo.datasource.driver=${org.jbpm.datasource.driver.class}|
                                cargo.datasource.url=${org.jbpm.datasource.connection.url}|
                                cargo.datasource.jndi=${org.jbpm.cluster.persistence.ds}|
                                cargo.datasource.username=${org.jbpm.datasource.username}|
                                cargo.datasource.password=${org.jbpm.datasource.password}|
                                cargo.datasource.transactionsupport=XA_TRANSACTION
                            </cargo.datasource.datasource.jbpm>
                          </properties>
                      </configuration>         
                  </configuration>
                  <goals>
                    <goal>start</goal>
                  </goals>
                </execution>
                <execution>
                  <id>start-second-container</id>
                  <phase>pre-integration-test</phase>
                  <configuration>
                      <container>
                          <type>installed</type>
                          <artifactInstaller>
                            <groupId>org.wildfly</groupId>
                            <artifactId>wildfly-dist</artifactId>
                            <version>${version.wildfly10}</version>
                            <extractDir>${containers.dir}/default</extractDir>
                          </artifactInstaller>
                          <systemProperties>
                              <org.kie.server.id>templateOne</org.kie.server.id>
                              <org.kie.server.location>${kie.server.cluster.two.http.url}</org.kie.server.location>
                              <org.kie.executor.jms>false</org.kie.executor.jms>
                              <org.kie.server.persistence.ds>${org.jbpm.cluster.persistence.ds}</org.kie.server.persistence.ds>
                              <org.kie.server.persistence.dialect>${org.jbpm.persistence.dialect}</org.kie.server.persistence.dialect>
                          </systemProperties>
                      </container>
                      <deployables combine.self="override">
                        <deployable>
                          <groupId>${project.groupId}</groupId>
                          <artifactId>kie-server</artifactId>
                          <!-- default, may be overridden in container specific profiles -->
                          <classifier>${kie.server.classifier}</classifier>
                          <type>war</type>
                          <properties>
                            <context>${kie.server.context}</context>
                          </properties>
                          <pingUrlPath>/${kie.server.context}/services/rest/server</pingUrlPath>
                          <pingTimeout>60000</pingTimeout>
                        </deployable>
                      </deployables>
                      <configuration>
                          <home>${container.profile.dir}/cluster2</home>
                          <properties>
                              <cargo.jboss.configuration>standalone-full</cargo.jboss.configuration>
                              <cargo.jvmargs>-Xmx1024m</cargo.jvmargs>
                              <cargo.port.offset>300</cargo.port.offset>
                              <cargo.datasource.datasource.jbpm>
                                cargo.datasource.driver=${org.jbpm.datasource.driver.class}|
                                cargo.datasource.url=${org.jbpm.datasource.connection.url}|
                                cargo.datasource.jndi=${org.jbpm.cluster.persistence.ds}|
                                cargo.datasource.username=${org.jbpm.datasource.username}|
                                cargo.datasource.password=${org.jbpm.datasource.password}|
                                cargo.datasource.transactionsupport=XA_TRANSACTION
                              </cargo.datasource.datasource.jbpm>
                          </properties>
                      </configuration>
                  </configuration>
                  <goals>
                    <goal>start</goal>
                  </goals>
                </execution>
                <execution>
                  <id>stop-first-container</id>
                  <phase>post-integration-test</phase>
                  <configuration>
                    <configuration>
                          <properties>
                              <cargo.port.offset>150</cargo.port.offset>
                          </properties>
                      </configuration>
                  </configuration>
                  <goals>
                    <goal>stop</goal>
                  </goals>
                </execution>
                <execution>
                  <id>stop-second-container</id>
                  <phase>post-integration-test</phase>
                  <configuration>
                    <configuration>
                          <properties>
                              <cargo.port.offset>300</cargo.port.offset>
                          </properties>
                      </configuration>
                  </configuration>
                  <goals>
                    <goal>stop</goal>
                  </goals>
                </execution>
              </executions>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    <!-- for other containers disable cargo plugin and failsafe plugin -->
    <profile>
      <id>tomcat8</id>
        <build>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-failsafe-plugin</artifactId>
              <executions>
                <execution><!--skip-->
                </execution>
              </executions>
              <goals/>
            </plugin>
            <plugin>
              <groupId>org.codehaus.cargo</groupId>
              <artifactId>cargo-maven2-plugin</artifactId>
              <executions>
                <execution>
                  <id>start-container</id>
                  <phase>none</phase>
                <goals/>
                <!-- do nothing, container is not managed by cargo -->
              </execution>
              <execution>
                <id>stop-container</id>
                <phase>none</phase>
                <goals/>
                <!-- do nothing, container is not managed by cargo -->
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>oracle-wls-12</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <executions>
              <execution>
                <goals combine.self="override"/>
              </execution>
            </executions>
            <goals/>
          </plugin>
          <plugin>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-maven2-plugin</artifactId>
            <executions>
              <execution>
                <id>start-container</id>
                <phase>none</phase>
                <goals/>
                <!-- do nothing, container is not managed by cargo -->
              </execution>
              <execution>
                <id>stop-container</id>
                <phase>none</phase>
                <goals/>
                <!-- do nothing, container is not managed by cargo -->
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>was85x</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <executions>
              <execution>
                <goals combine.self="override"/>
              </execution>
            </executions>
            <goals/>
          </plugin>
          <plugin>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-maven2-plugin</artifactId>
            <executions>
              <execution>
                <id>start-container</id>
                <phase>none</phase>
                <goals/>
                <!-- do nothing, container is not managed by cargo -->
              </execution>
              <execution>
                <id>stop-container</id>
                <phase>none</phase>
                <goals/>
                <!-- do nothing, container is not managed by cargo -->
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>  
  </profiles>
</project>